import csv
import json
import math
import sys
import csv
from Queries import *

STOPS_JSON_FILE = 'venv/tramstops.json'
TRAMLINES_TSV_FILE = 'venv/tramlines.tsv'


def reading_tsv_file(text_file):
    dict_of_lines = {}
    stops_in_line = {}
    with open(text_file) as file:
        rows = csv.reader(file, delimiter="\t")
        for line in rows:
            if not line:
                dict_of_lines[temp_var] = stops_in_line.copy()
                stops_in_line = {}
            elif len(line[0]) <= 3 and len(line[0]) > 0:
                temp_var = line[0].rstrip(":")
            else:
                try:
                        the_split = line[0].rsplit(" ", 1)
                        name = (the_split[0]).rstrip()
                        stops_in_line[name] = the_split[1]
                except IndexError:
                    pass
    return dict_of_lines

def creating_lines(text_file):
    dict_of_lines = reading_tsv_file(text_file)
    print({line: dict_of_lines[line] for line in dict_of_lines})

"""def creating_lines(text_file):
    dict_of_lines = {}
    stops_in_line = []
    with open(text_file) as file:
        rows = csv.reader(file, delimiter="\t")
        for line in rows:
            if not line:
                dict_of_lines[temp_var] = stops_in_line.copy()
                stops_in_line = []
            elif len(line[0]) <= 3 and len(line[0]) > 0:
                temp_var = line[0].strip(':')
            else:
                the_split = line[0].rsplit(" ", 1)
                name = (the_split[0]).rstrip()
                if len(name) > 3:
                    stops_in_line.append(name)
    return(dict_of_lines)"""

def build_trams_stops(jsonobject):
    return {stop: {"lat": float(jsonobject[stop]["position"][0]), "lon": float(jsonobject[stop]["position"][1])} for stop in jsonobject}

if __name__ == '__main__':
    #dict_of_lines = creating_lines(TRAMLINES_TSV_FILE)
    creating_lines(TRAMLINES_TSV_FILE)
    #with open(STOPS_JSON_FILE, 'r') as infile:
        #jsonobject = json.load(infile)
        #positions = build_trams_stops(jsonobject)
    #answer = Queries.lines_between_stops(dict_of_lines, "Östra Sjukhuset", "Mölndals Innerstad")
    #print(answer)
