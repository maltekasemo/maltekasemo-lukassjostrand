from building_dictionaries import *
from Queries import *

tsv_read = reading_tsv_file('venv/tramlines.tsv')

def all_tram_lines_included():
    all_lines = [line for line in tsv_read]
    lines_dict = creating_lines(tsv_read)

    for line in lines_dict:
        if line in all_lines:
            all_lines.remove(line)

    if all_lines:
        return False
    else:
        return True

def same_stops_in_line():
    all_stops_in_line = {line: [stop for stop in tsv_read[line]] for line in tsv_read}
    lines_dict = creating_lines(tsv_read)

    if all_stops_in_line == lines_dict:
        return True
    else:
        return False

def all_distances_less_than_20km():
    stops_with_positions = build_trams_stops(STOPS_JSON_FILE)
    distances = []
    for stop1 in stops_with_positions:
        for stop2 in stops_with_positions:
            distance = Queries.distance_between_stops(stops_with_positions, stop1, stop2)
            if distance not in distances:
                print(distance, stop1, stop2)
                distances.append(distance)
    if max(distances) > 20:
        return False
    else:
        return True

def time_from_a_to_b_same_as_reverse():
    pass

def do_all_tests():
    #print(all_tram_lines_included())
    #print(same_stops_in_line())
    print(all_distances_less_than_20km())
    #print(time_from_a_to_b_same_as_reverse())

if __name__ == '__main__':
    do_all_tests()
