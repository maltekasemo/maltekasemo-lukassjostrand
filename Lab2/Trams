from Lab1.tramdata import *
from Graph import *
import sys
import json
TRAM_FILE = 'tramnetwork.json'

class TramStops:
    def __init__(self, name: str, lines: list, lat: float, lon: float):
        self._lines = lines
        self._name = name
        self._position = (lat, lon)

    def add_line(self, line):
        self._lines.append(line)

    def get_lines(self):
        return self._lines

    def get_name(self):
        return self._name

    def get_position(self):
        return self._position

    def set_position(self, lat: float, lon: float):
        self._position = (lat, lon)

class TramLine:
    def __init__(self, num: str, stops: list):
        self._number = num
        self._stops = stops

    def get_number(self):
        return self._number

    def get_stops(self):
        return self._stops

class TramNetwork:
    def __init__(self, lines: dict, stops: dict, times: dict):
        self._linedict = lines
        self._stopdict = stops
        self._timedict = times

    def get_all_lines(self):
        return [line for line in self._linedict]

    def get_all_stops(self):
        return [stop for stop in self._stopdict]

    def get_extreme_position(self):
        pass

    def get_geo_distance(self, a, b):
        return distance_between_stops(self._stopdict, a, b)

    def get_line_stops(self, line):
        return [stop for stop in self._linedict[line]]

    def remove_lines(self, lines):
        for line in lines:
            self._linedict.pop(line)

    def get_stop_lines(self, a):
        return lines_via_stop(self._linedict, a)

    def get_stop_position(self, a):
        return self._stopdict[a]._position

    def get_transition_time(self, a, b):
        try:
            return self._timedict[a][b]
        except ValueError:
            return self._timedict[b][a]
        else:
            return 'Fail'

def readTramnetwork(file = TRAM_FILE):
    with open(file, 'r') as data:
        tramnetwork = json.load(data)
    return TramNetwork(tramnetwork['lines'], tramnetwork['stops'], tramnetwork['times'])


